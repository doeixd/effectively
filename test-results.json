{"numTotalTestSuites":110,"numPassedTestSuites":73,"numFailedTestSuites":37,"numPendingTestSuites":0,"numTotalTests":262,"numPassedTests":219,"numFailedTests":42,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749745171731,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Bracket and Provide Integration"],"fullName":"Bracket and Provide Integration should properly provide resources from bracket to use tasks","status":"passed","title":"should properly provide resources from bracket to use tasks","duration":4.972699999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bracket and Provide Integration"],"fullName":"Bracket and Provide Integration should handle nested bracket provides correctly","status":"passed","title":"should handle nested bracket provides correctly","duration":1.2122999999999706,"failureMessages":[],"meta":{}}],"startTime":1749745173432,"endTime":1749745173438.2124,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/bracket-provide-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","CircuitOpenError"],"fullName":"Circuit Breaker (circuit-breaker.ts) CircuitOpenError should create proper error with circuit ID","status":"passed","title":"should create proper error with circuit ID","duration":3.6697000000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","CircuitOpenError"],"fullName":"Circuit Breaker (circuit-breaker.ts) CircuitOpenError should have proper prototype chain","status":"passed","title":"should have proper prototype chain","duration":0.5588000000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should allow requests to pass through when circuit is closed","status":"passed","title":"should allow requests to pass through when circuit is closed","duration":2.1428999999999405,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should record failures but allow requests until threshold is reached","status":"passed","title":"should record failures but allow requests until threshold is reached","duration":4.721700000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should reset failure count on successful request","status":"failed","title":"should reset failure count on successful request","duration":14.233000000000061,"failureMessages":["WorkflowError: Task failed: One-time failure\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:126:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker OPEN state behavior should trip to OPEN state after reaching failure threshold","status":"passed","title":"should trip to OPEN state after reaching failure threshold","duration":2.982499999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker OPEN state behavior should fail fast with CircuitOpenError when circuit is open","status":"failed","title":"should fail fast with CircuitOpenError when circuit is open","duration":5003.5827,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should transition to HALF-OPEN after timeout and succeed on trial request","status":"failed","title":"should transition to HALF-OPEN after timeout and succeed on trial request","duration":2.662000000000262,"failureMessages":["WorkflowError: Task failed: Circuit Breaker \"recovering-circuit\" is open and not accepting requests.\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:212:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should return to OPEN state if trial request fails","status":"failed","title":"should return to OPEN state if trial request fails","duration":6.76929999999993,"failureMessages":["AssertionError: expected \"spy\" to be called with arguments: [ Array(1) ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"[Circuit Breaker: still-failing-circuit] State changed to HALF-OPEN. Attempting trial request.\",\u001b[90m\n\u001b[31m+   \"[Circuit Breaker: still-failing-circuit] Recorded failure #1.\",\u001b[90m\n\u001b[31m+   Object {\u001b[90m\n\u001b[31m+     \"error\": [Error: Still failing],\u001b[90m\n\u001b[31m+   },\u001b[90m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1465:13)\n    at Proxy.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Proxy.methodWrapper (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:239:33\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should only transition to HALF-OPEN after the full timeout period","status":"failed","title":"should only transition to HALF-OPEN after the full timeout period","duration":3.311800000000403,"failureMessages":["AssertionError: expected [Function] to throw error including 'Fails' but got 'Task failed: Circuit Breaker \"timeout…'\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1849:31\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:266:9\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom failure threshold","status":"passed","title":"should respect custom failure threshold","duration":2.036599999999453,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom open state timeout","status":"failed","title":"should respect custom open state timeout","duration":1.9880000000002838,"failureMessages":["AssertionError: expected [Function] to throw error including 'Fails' but got 'Task failed: Circuit Breaker \"custom-…'\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1849:31\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:313:9\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom isFailure predicate","status":"failed","title":"should respect custom isFailure predicate","duration":2.060599999999795,"failureMessages":["AssertionError: expected error to be instance of PermanentError\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1849:31\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:354:9\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should not count BacktrackSignal as failure by default","status":"passed","title":"should not count BacktrackSignal as failure by default","duration":1.2211999999999534,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Multiple circuit instances"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Multiple circuit instances should maintain separate state for different circuit IDs","status":"passed","title":"should maintain separate state for different circuit IDs","duration":1.673200000000179,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Context integration"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Context integration should work without logger in context","status":"passed","title":"should work without logger in context","duration":1.267800000000534,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Context integration"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Context integration should use context logger when available","status":"passed","title":"should use context logger when available","duration":1.2137000000002445,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should handle undefined and null values correctly","status":"passed","title":"should handle undefined and null values correctly","duration":0.5276000000003478,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should handle rapid successive calls correctly","status":"failed","title":"should handle rapid successive calls correctly","duration":1.525499999999738,"failureMessages":["AssertionError: expected 0 to be greater than 0\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:502:35\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should maintain state across different execution contexts","status":"passed","title":"should maintain state across different execution contexts","duration":0.907799999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Recovery scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Recovery scenarios should handle mixed success/failure patterns correctly","status":"failed","title":"should handle mixed success/failure patterns correctly","duration":1.8033000000004904,"failureMessages":["WorkflowError: Task failed: Circuit Breaker \"pattern-circuit\" is open and not accepting requests.\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\circuit-breaker.test.ts:559:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}}],"startTime":1749745172408,"endTime":1749745177470.8032,"status":"failed","message":"","name":"C:/Users/Pglenn/effectively/test/circuit-breaker.test.ts"},{"assertionResults":[{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should pipe a value through a sequence of functions","status":"passed","title":"should pipe a value through a sequence of functions","duration":3.282600000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should work with a single function","status":"passed","title":"should work with a single function","duration":0.6875,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should return the value unchanged when no functions provided","status":"passed","title":"should return the value unchanged when no functions provided","duration":0.46230000000002747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should handle complex transformations","status":"passed","title":"should handle complex transformations","duration":0.5209999999999582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should compose functions from left to right","status":"passed","title":"should compose functions from left to right","duration":0.5030000000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle functions with multiple arguments in first function","status":"passed","title":"should handle functions with multiple arguments in first function","duration":0.5749000000000706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle single function","status":"passed","title":"should handle single function","duration":0.38440000000002783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle no functions","status":"passed","title":"should handle no functions","duration":0.338799999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should chain tasks together sequentially","status":"passed","title":"should chain tasks together sequentially","duration":2.366300000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should work with plain functions","status":"passed","title":"should work with plain functions","duration":4.063300000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should handle single task workflow","status":"passed","title":"should handle single task workflow","duration":0.5715000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should pass context through workflow","status":"passed","title":"should pass context through workflow","duration":0.6458999999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should chain alias work identically","status":"passed","title":"should chain alias work identically","duration":0.9595000000000482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromValue"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromValue should start workflow with static value","status":"passed","title":"should start workflow with static value","duration":0.842200000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromValue"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromValue should work with complex objects","status":"passed","title":"should work with complex objects","duration":1.211999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromise"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromise should start workflow with promise","status":"passed","title":"should start workflow with promise","duration":0.7748000000000275,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromise"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromise should handle rejected promises","status":"passed","title":"should handle rejected promises","duration":2.178399999999897,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromiseFn"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromiseFn should start workflow with context-dependent function","status":"failed","title":"should start workflow with context-dependent function","duration":17.02679999999998,"failureMessages":["WorkflowError: Task failed: Cannot read properties of null (reading 'userId')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:251:26\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromiseFn"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromiseFn should pass context correctly","status":"failed","title":"should pass context correctly","duration":1.4307000000000016,"failureMessages":["WorkflowError: Task failed: Cannot read properties of null (reading 'counter')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:258:26\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should transform values in a workflow","status":"failed","title":"should transform values in a workflow","duration":2.0539999999999736,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'name')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:272:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should work with async mapping functions","status":"failed","title":"should work with async mapping functions","duration":5004.6106,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should pass context to mapping function","status":"failed","title":"should pass context to mapping function","duration":5.6042999999999665,"failureMessages":["AssertionError: expected 'undefined-undefined' to be 'data-test-user' // Object.is equality\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:296:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","flatMap"],"fullName":"Composition Utilities (utils.ts) Pipeable operators flatMap should transform values into new tasks","status":"failed","title":"should transform values into new tasks","duration":3.3630000000002838,"failureMessages":["AssertionError: expected NaN to be 15 // Object.is equality\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:310:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","flatMap"],"fullName":"Composition Utilities (utils.ts) Pipeable operators flatMap should pass context to flatMap function","status":"failed","title":"should pass context to flatMap function","duration":1.319999999999709,"failureMessages":["AssertionError: expected 'undefined-undefined' to be 'prefix-test-user' // Object.is equality\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:322:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","pick"],"fullName":"Composition Utilities (utils.ts) Pipeable operators pick should pick specified keys from object","status":"failed","title":"should pick specified keys from object","duration":0.9848000000001775,"failureMessages":["WorkflowError: Task failed: Cannot convert undefined or null to object\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:336:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","pick"],"fullName":"Composition Utilities (utils.ts) Pipeable operators pick should handle missing keys gracefully","status":"failed","title":"should handle missing keys gracefully","duration":0.9557000000004336,"failureMessages":["WorkflowError: Task failed: Cannot convert undefined or null to object\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:343:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","mapTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers mapTask should transform task output","status":"passed","title":"should transform task output","duration":0.6318999999994048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","mapTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers mapTask should work with async mappers","status":"failed","title":"should work with async mappers","duration":5016.034000000001,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","andThenTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers andThenTask should chain tasks with direct composition","status":"passed","title":"should chain tasks with direct composition","duration":0.8212000000003172,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should execute task when predicate is true","status":"failed","title":"should execute task when predicate is true","duration":0.9766000000017812,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'length')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:394:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should skip task when predicate is false","status":"failed","title":"should skip task when predicate is false","duration":0.7759999999998399,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'length')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:404:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should work with async predicates","status":"failed","title":"should work with async predicates","duration":5006.956700000001,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should pass context to predicate","status":"failed","title":"should pass context to predicate","duration":1.5645999999997002,"failureMessages":["AssertionError: expected undefined to be 'hello-processed' // Object.is equality\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:428:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","unless"],"fullName":"Composition Utilities (utils.ts) Flow control and logic unless should execute task when predicate is false","status":"failed","title":"should execute task when predicate is false","duration":1.268500000000131,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'length')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:439:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","unless"],"fullName":"Composition Utilities (utils.ts) Flow control and logic unless should skip task when predicate is true","status":"failed","title":"should skip task when predicate is true","duration":0.9650000000001455,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'length')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:449:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should execute task repeatedly while condition is true","status":"passed","title":"should execute task repeatedly while condition is true","duration":0.6732000000010885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should not execute if condition is initially false","status":"passed","title":"should not execute if condition is initially false","duration":0.5725999999995111,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should respect abort signals","status":"failed","title":"should respect abort signals","duration":5013.004900000002,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should perform side effects without changing value","status":"failed","title":"should perform side effects without changing value","duration":1.16990000000078,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'toUpperCase')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:502:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should work with async side effects","status":"failed","title":"should work with async side effects","duration":5007.151099999999,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should pass context to side effect function","status":"failed","title":"should pass context to side effect function","duration":1.3725000000013097,"failureMessages":["AssertionError: expected undefined to be 'test-user' // Object.is equality\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:536:32\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","sleep"],"fullName":"Composition Utilities (utils.ts) Flow control and logic sleep should pause workflow for specified duration","status":"failed","title":"should pause workflow for specified duration","duration":1.932200000002922,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'signal')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:551:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","sleep"],"fullName":"Composition Utilities (utils.ts) Flow control and logic sleep should respect abort signals","status":"passed","title":"should respect abort signals","duration":1.136499999996886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should perform side effects on error without catching it","status":"passed","title":"should perform side effects on error without catching it","duration":0.7111999999979162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should not perform side effect on success","status":"passed","title":"should not perform side effect on success","duration":0.4668999999994412,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should pass context to error handler","status":"passed","title":"should pass context to error handler","duration":0.7283999999999651,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","attempt"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience attempt should convert exceptions to Result type","status":"failed","title":"should convert exceptions to Result type","duration":1.0126999999993131,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'isErr')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:628:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","attempt"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience attempt should wrap successful results in Ok","status":"failed","title":"should wrap successful results in Ok","duration":0.8631999999997788,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'isOk')\n    at runImpl (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1194:17)\n    at run2 (C:\\Users\\Pglenn\\effectively\\src\\run.ts:1222:20)\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:641:24\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should retry failed tasks","status":"failed","title":"should retry failed tasks","duration":5014.4686,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should fail after max attempts","status":"failed","title":"should fail after max attempts","duration":5015.086500000001,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should use exponential backoff","status":"failed","title":"should use exponential backoff","duration":5016.130299999997,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should respect shouldRetry predicate","status":"failed","title":"should respect shouldRetry predicate","duration":5015.6924,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should not retry when shouldRetry returns false","status":"passed","title":"should not retry when shouldRetry returns false","duration":0.869700000002922,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withName"],"fullName":"Composition Utilities (utils.ts) Task enhancers withName should attach name to task","status":"passed","title":"should attach name to task","duration":0.6129000000000815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withName"],"fullName":"Composition Utilities (utils.ts) Task enhancers withName should preserve task functionality","status":"passed","title":"should preserve task functionality","duration":0.4333000000042375,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","memoize"],"fullName":"Composition Utilities (utils.ts) Task enhancers memoize should cache results based on input","status":"failed","title":"should cache results based on input","duration":5012.878799999999,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","memoize"],"fullName":"Composition Utilities (utils.ts) Task enhancers memoize should use deep equality for cache keys","status":"passed","title":"should use deep equality for cache keys","duration":0.8415999999997439,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","once"],"fullName":"Composition Utilities (utils.ts) Task enhancers once should execute task only once","status":"passed","title":"should execute task only once","duration":1.114399999998568,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","once"],"fullName":"Composition Utilities (utils.ts) Task enhancers once should share the same promise across calls","status":"passed","title":"should share the same promise across calls","duration":0.5403999999980442,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should timeout long-running tasks","status":"passed","title":"should timeout long-running tasks","duration":0.9492000000027474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should complete fast tasks normally","status":"passed","title":"should complete fast tasks normally","duration":0.48619999999937136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should clean up timers on abort","status":"failed","title":"should clean up timers on abort","duration":5013.180800000002,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withState"],"fullName":"Composition Utilities (utils.ts) Task enhancers withState should manage stateful workflows","status":"passed","title":"should manage stateful workflows","duration":1.3325999999942724,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withState"],"fullName":"Composition Utilities (utils.ts) Task enhancers withState should initialize state with input value","status":"passed","title":"should initialize state with input value","duration":0.5186000000030617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withThrottle"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withThrottle should throttle task execution","status":"passed","title":"should throttle task execution","duration":1.1215999999985797,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withThrottle"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withThrottle should respect abort signals in throttle queue","status":"failed","title":"should respect abort signals in throttle queue","duration":5005.576500000003,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withPoll"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withPoll should poll until condition is met","status":"failed","title":"should poll until condition is met","duration":5010.002699999997,"failureMessages":["Error: Test timed out in 5000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:614:17)\n    at processTimers (node:internal/timers:549:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withPoll"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withPoll should timeout if condition is never met","status":"passed","title":"should timeout if condition is never met","duration":1.017200000002049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should batch multiple calls","status":"passed","title":"should batch multiple calls","duration":0.904900000008638,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should handle batch function errors","status":"passed","title":"should handle batch function errors","duration":0.9875000000029104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should respect abort signals in batch queue","status":"failed","title":"should respect abort signals in batch queue","duration":3.0054999999993015,"failureMessages":["AssertionError: expected [Function] to throw error including 'Aborted' but got 'Task failed: This operation was abort…'\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+expect@2.1.9/node_modules/@vitest/expect/dist/index.js:1849:31"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withDebounce"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withDebounce should debounce rapid calls","status":"failed","title":"should debounce rapid calls","duration":3.0702000000019325,"failureMessages":["AssertionError: expected [ 'processed-first', …(2) ] to deeply equal [ 'processed-third', …(2) ]\n    at C:\\Users\\Pglenn\\effectively\\test\\composition-utils.test.ts:1077:25\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/@vitest+runner@2.1.9/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///C:/Users/Pglenn/effectively/node_modules/.pnpm/vitest@2.1.9_@types+node@22.15.31_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withDebounce"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withDebounce should execute after debounce period","status":"passed","title":"should execute after debounce period","duration":0.599900000001071,"failureMessages":[],"meta":{}}],"startTime":1749745172408,"endTime":1749745237654.5999,"status":"failed","message":"","name":"C:/Users/Pglenn/effectively/test/composition-utils.test.ts"},{"assertionResults":[{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should create a context and run a simple task","status":"passed","title":"should create a context and run a simple task","duration":3.576599999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should provide context to tasks","status":"passed","title":"should provide context to tasks","duration":0.9722999999999615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should handle context overrides","status":"passed","title":"should handle context overrides","duration":0.5183999999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should handle database operations through context","status":"passed","title":"should handle database operations through context","duration":2.273200000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should throw errors by default","status":"passed","title":"should throw errors by default","duration":2.1441999999999553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should return Result when throw: false","status":"passed","title":"should return Result when throw: false","duration":1.0562999999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should handle successful tasks with throw: false","status":"passed","title":"should handle successful tasks with throw: false","duration":0.786200000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should handle BacktrackSignal correctly","status":"passed","title":"should handle BacktrackSignal correctly","duration":0.9506000000000085,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should identify BacktrackSignal with type guard","status":"passed","title":"should identify BacktrackSignal with type guard","duration":1.7432999999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should prevent infinite backtracking loops","status":"passed","title":"should prevent infinite backtracking loops","duration":44.786899999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should throw ContextNotFoundError when getContext called outside run","status":"passed","title":"should throw ContextNotFoundError when getContext called outside run","duration":0.34120000000007167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should return error Result when getContextSafe called outside run","status":"passed","title":"should return error Result when getContextSafe called outside run","duration":8.538999999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should return undefined when getContextOrUndefined called outside run","status":"passed","title":"should return undefined when getContextOrUndefined called outside run","duration":0.32720000000006166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should work correctly inside run","status":"passed","title":"should work correctly inside run","duration":6.96429999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should use global context as fallback for smart functions","status":"passed","title":"should use global context as fallback for smart functions","duration":1.2695999999999685,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should throw errors for local-only functions when no context","status":"passed","title":"should throw errors for local-only functions when no context","duration":0.6924999999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should work with global-only functions","status":"passed","title":"should work with global-only functions","duration":0.7097999999999729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should temporarily override context values","status":"passed","title":"should temporarily override context values","duration":0.8350000000000364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should nest provide calls correctly","status":"passed","title":"should nest provide calls correctly","duration":0.8279999999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should preserve scope in provide calls","status":"passed","title":"should preserve scope in provide calls","duration":0.546100000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should validate context with schema","status":"passed","title":"should validate context with schema","duration":0.8547000000000935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should merge contexts correctly","status":"passed","title":"should merge contexts correctly","duration":0.3247000000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should require context properties","status":"passed","title":"should require context properties","duration":0.7395000000000209,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should create and use injection tokens","status":"passed","title":"should create and use injection tokens","duration":0.6213000000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should handle optional injection","status":"passed","title":"should handle optional injection","duration":0.4070000000000391,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should throw when required injection not found","status":"passed","title":"should throw when required injection not found","duration":0.5720999999999776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Cancellation and abort signals"],"fullName":"Core Execution Engine (run.ts) Cancellation and abort signals should propagate abort signals to context scope","status":"passed","title":"should propagate abort signals to context scope","duration":0.6788000000000238,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Cancellation and abort signals"],"fullName":"Core Execution Engine (run.ts) Cancellation and abort signals should handle abort during execution","status":"passed","title":"should handle abort during execution","duration":21.366300000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Logging"],"fullName":"Core Execution Engine (run.ts) Logging should use provided logger","status":"passed","title":"should use provided logger","duration":1.473799999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Logging"],"fullName":"Core Execution Engine (run.ts) Logging should handle errors with logger","status":"passed","title":"should handle errors with logger","duration":1.803700000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should handle null/undefined inputs gracefully","status":"passed","title":"should handle null/undefined inputs gracefully","duration":1.0354000000000951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should handle deeply nested task execution","status":"passed","title":"should handle deeply nested task execution","duration":0.9854000000000269,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should preserve context through complex async operations","status":"passed","title":"should preserve context through complex async operations","duration":23.82179999999994,"failureMessages":[],"meta":{}}],"startTime":1749745172403,"endTime":1749745172541.8218,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/core-run.test.ts"},{"assertionResults":[{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should perform parallel map and sequential reduce","status":"passed","title":"should perform parallel map and sequential reduce","duration":27.8716,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.5244999999999891,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":2.953700000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should work with complex data types","status":"passed","title":"should work with complex data types","duration":2.078300000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should work with string concatenation","status":"passed","title":"should work with string concatenation","duration":1.747699999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle concurrency limits","status":"passed","title":"should handle concurrency limits","duration":85.42869999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle task failures gracefully","status":"passed","title":"should handle task failures gracefully","duration":2.348899999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should filter array based on async predicate","status":"passed","title":"should filter array based on async predicate","duration":30.627200000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.7255999999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle arrays where no items pass filter","status":"passed","title":"should handle arrays where no items pass filter","duration":13.230000000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle arrays where all items pass filter","status":"passed","title":"should handle arrays where all items pass filter","duration":16.055799999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should work with complex data types","status":"passed","title":"should work with complex data types","duration":20.573399999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should respect concurrency limits","status":"passed","title":"should respect concurrency limits","duration":119.94320000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle predicate task failures","status":"passed","title":"should handle predicate task failures","duration":15.518000000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should maintain original order of elements","status":"passed","title":"should maintain original order of elements","duration":30.920499999999947,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should group items by key generated from async task","status":"passed","title":"should group items by key generated from async task","duration":32.29729999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.36789999999996326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle arrays with single group","status":"passed","title":"should handle arrays with single group","duration":15.033400000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should work with complex data types","status":"passed","title":"should work with complex data types","duration":16.21659999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle numeric keys","status":"passed","title":"should handle numeric keys","duration":15.57280000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should respect concurrency limits","status":"passed","title":"should respect concurrency limits","duration":93.72989999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle keying task failures","status":"passed","title":"should handle keying task failures","duration":15.860799999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should maintain insertion order within groups","status":"passed","title":"should maintain insertion order within groups","duration":15.823399999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle duplicate keys correctly","status":"passed","title":"should handle duplicate keys correctly","duration":15.396799999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","Integration tests"],"fullName":"Data Processing (data-processing.ts) Integration tests should combine mapReduce with filter for complex processing","status":"passed","title":"should combine mapReduce with filter for complex processing","duration":18.36719999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","Integration tests"],"fullName":"Data Processing (data-processing.ts) Integration tests should use groupBy with mapReduce for aggregation","status":"passed","title":"should use groupBy with mapReduce for aggregation","duration":46.53659999999991,"failureMessages":[],"meta":{}}],"startTime":1749745173059,"endTime":1749745173716.5366,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/data-processing.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Provide"],"fullName":"Debug Provide should work with context-specific provide","status":"passed","title":"should work with context-specific provide","duration":4.510300000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Provide"],"fullName":"Debug Provide should work with global provide","status":"passed","title":"should work with global provide","duration":0.9774000000000456,"failureMessages":[],"meta":{}}],"startTime":1749745173819,"endTime":1749745173823.9773,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/debug-provide.test.ts"},{"assertionResults":[{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should execute simple do block with tasks","status":"passed","title":"should execute simple do block with tasks","duration":3.691500000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle input values","status":"passed","title":"should handle input values","duration":0.5937999999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle plain values with pure","status":"passed","title":"should handle plain values with pure","duration":0.4008000000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Promise values","status":"passed","title":"should handle Promise values","duration":0.5028000000000361,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Result types - success case","status":"passed","title":"should handle Result types - success case","duration":0.5943999999999505,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Result types - error case","status":"passed","title":"should handle Result types - error case","duration":3.637200000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should propagate errors from tasks","status":"passed","title":"should propagate errors from tasks","duration":0.7330000000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle try/catch in generators","status":"passed","title":"should handle try/catch in generators","duration":0.6313000000000102,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","context-specific doTask"],"fullName":"Do Notation context-specific doTask should work with typed context","status":"passed","title":"should work with typed context","duration":0.702699999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","context-specific doTask"],"fullName":"Do Notation context-specific doTask should work with doBlock for no-input workflows","status":"passed","title":"should work with doBlock for no-input workflows","duration":0.5672999999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doWhen with true condition","status":"passed","title":"should execute doWhen with true condition","duration":3.1265000000000214,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doWhen with false condition","status":"passed","title":"should execute doWhen with false condition","duration":0.5627000000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doUnless with false condition","status":"passed","title":"should execute doUnless with false condition","duration":0.6443000000000438,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should skip doUnless with true condition","status":"passed","title":"should skip doUnless with true condition","duration":0.3255999999999517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","sequence function"],"fullName":"Do Notation sequence function should execute tasks in sequence and collect results","status":"passed","title":"should execute tasks in sequence and collect results","duration":1.0731999999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","sequence function"],"fullName":"Do Notation sequence function should handle empty sequence","status":"passed","title":"should handle empty sequence","duration":0.3371000000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","forEach function"],"fullName":"Do Notation forEach function should iterate over items and execute generator for each","status":"passed","title":"should iterate over items and execute generator for each","duration":0.5589999999999691,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","forEach function"],"fullName":"Do Notation forEach function should handle empty array","status":"passed","title":"should handle empty array","duration":0.25950000000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","integration tests"],"fullName":"Do Notation integration tests should handle complex workflow with multiple patterns","status":"passed","title":"should handle complex workflow with multiple patterns","duration":0.4836999999999989,"failureMessages":[],"meta":{}}],"startTime":1749745173080,"endTime":1749745173101.4836,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/do-notation.test.ts"},{"assertionResults":[{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create a basic custom error type","status":"passed","title":"should create a basic custom error type","duration":1.9927999999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create hierarchical error types","status":"passed","title":"should create hierarchical error types","duration":0.5302000000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create multi-level inheritance hierarchies","status":"passed","title":"should create multi-level inheritance hierarchies","duration":1.7000000000000455,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should handle custom constructor parameters","status":"passed","title":"should handle custom constructor parameters","duration":0.27929999999992106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should maintain proper stack traces","status":"passed","title":"should maintain proper stack traces","duration":5.4909000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should set constructor name properly","status":"passed","title":"should set constructor name properly","duration":0.24509999999997945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should handle errors with no message","status":"passed","title":"should handle errors with no message","duration":0.3523999999999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should create a typed error handler tuple","status":"passed","title":"should create a typed error handler tuple","duration":1.2332999999999856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should provide correct error typing in handler","status":"passed","title":"should provide correct error typing in handler","duration":0.5806999999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should work with async handlers","status":"passed","title":"should work with async handlers","duration":22.59069999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should catch and handle specific errors","status":"passed","title":"should catch and handle specific errors","duration":6.1825000000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle hierarchical errors correctly","status":"passed","title":"should handle hierarchical errors correctly","duration":0.525600000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should match handlers in order","status":"passed","title":"should match handlers in order","duration":0.7274999999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should not catch BacktrackSignal errors","status":"passed","title":"should not catch BacktrackSignal errors","duration":0.8759999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should rethrow unhandled errors","status":"passed","title":"should rethrow unhandled errors","duration":6.3793000000000575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should pass context to error handlers","status":"passed","title":"should pass context to error handlers","duration":0.8759999999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle async error handlers","status":"passed","title":"should handle async error handlers","duration":24.888400000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should work with successful tasks","status":"passed","title":"should work with successful tasks","duration":3.4705999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle non-Error thrown values","status":"passed","title":"should handle non-Error thrown values","duration":0.7409999999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle multiple error types in complex workflows","status":"passed","title":"should handle multiple error types in complex workflows","duration":0.8362999999999374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert successful sync functions to Ok results","status":"passed","title":"should convert successful sync functions to Ok results","duration":0.40599999999994907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert successful async functions to Ok results","status":"passed","title":"should convert successful async functions to Ok results","duration":23.837799999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert thrown errors to Err results","status":"passed","title":"should convert thrown errors to Err results","duration":0.34180000000003474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert async thrown errors to Err results","status":"passed","title":"should convert async thrown errors to Err results","duration":15.052700000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should handle non-Error thrown values","status":"passed","title":"should handle non-Error thrown values","duration":0.4379000000000133,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should preserve function arguments","status":"passed","title":"should preserve function arguments","duration":0.37630000000001473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with functions that return undefined","status":"passed","title":"should work with functions that return undefined","duration":0.34770000000003165,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with functions that return null","status":"passed","title":"should work with functions that return null","duration":0.20809999999994488,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should handle custom error types","status":"passed","title":"should handle custom error types","duration":0.3826000000000249,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with API-like functions","status":"passed","title":"should work with API-like functions","duration":0.5920999999999594,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","Integration with task workflows"],"fullName":"Error Handling (errors.ts) Integration with task workflows should integrate error boundaries with complex workflows","status":"passed","title":"should integrate error boundaries with complex workflows","duration":1.024499999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","Integration with task workflows"],"fullName":"Error Handling (errors.ts) Integration with task workflows should combine tryCatch with task workflows","status":"passed","title":"should combine tryCatch with task workflows","duration":1.7292999999999665,"failureMessages":[],"meta":{}}],"startTime":1749745172419,"endTime":1749745172545.7292,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/error-handling.test.ts"},{"assertionResults":[{"ancestorTitles":["Global Provide Function Fix"],"fullName":"Global Provide Function Fix should properly enhance context when provide is called within existing context","status":"passed","title":"should properly enhance context when provide is called within existing context","duration":4.012400000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Global Provide Function Fix"],"fullName":"Global Provide Function Fix should work with nested provide calls","status":"passed","title":"should work with nested provide calls","duration":0.959699999999998,"failureMessages":[],"meta":{}}],"startTime":1749745173497,"endTime":1749745173501.9597,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/global-provide-fix.test.ts"},{"assertionResults":[{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should acquire, use, and release resources correctly","status":"passed","title":"should acquire, use, and release resources correctly","duration":4.342700000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should release resources even when use task throws","status":"passed","title":"should release resources even when use task throws","duration":2.3384999999999536,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should handle errors in acquire phase","status":"passed","title":"should handle errors in acquire phase","duration":0.8421000000000731,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should handle errors in release phase","status":"passed","title":"should handle errors in release phase","duration":4.84839999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should handle errors in both use and release phases","status":"passed","title":"should handle errors in both use and release phases","duration":2.9630999999999403,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracket function"],"fullName":"Resource Management (bracket.ts) bracket function should work with complex resource merging","status":"passed","title":"should work with complex resource merging","duration":0.7948999999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable utilities","isDisposable and isAsyncDisposable"],"fullName":"Resource Management (bracket.ts) Disposable utilities isDisposable and isAsyncDisposable should correctly identify disposable objects","status":"passed","title":"should correctly identify disposable objects","duration":1.8515999999999622,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable utilities","makeDisposable"],"fullName":"Resource Management (bracket.ts) Disposable utilities makeDisposable should create a synchronous disposable wrapper","status":"passed","title":"should create a synchronous disposable wrapper","duration":0.4499999999999318,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable utilities","makeDisposable"],"fullName":"Resource Management (bracket.ts) Disposable utilities makeDisposable should preserve original object properties","status":"passed","title":"should preserve original object properties","duration":0.5559000000000651,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable utilities","makeAsyncDisposable"],"fullName":"Resource Management (bracket.ts) Disposable utilities makeAsyncDisposable should create an asynchronous disposable wrapper","status":"passed","title":"should create an asynchronous disposable wrapper","duration":12.54219999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable utilities","makeAsyncDisposable"],"fullName":"Resource Management (bracket.ts) Disposable utilities makeAsyncDisposable should preserve original object properties","status":"passed","title":"should preserve original object properties","duration":0.8564999999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketDisposable"],"fullName":"Resource Management (bracket.ts) bracketDisposable should work with synchronous disposable resources","status":"skipped","title":"should work with synchronous disposable resources","failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketDisposable"],"fullName":"Resource Management (bracket.ts) bracketDisposable should work with asynchronous disposable resources","status":"passed","title":"should work with asynchronous disposable resources","duration":2.8192000000000235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketDisposable"],"fullName":"Resource Management (bracket.ts) bracketDisposable should dispose resources even when use task fails","status":"passed","title":"should dispose resources even when use task fails","duration":0.9354999999999336,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketDisposable"],"fullName":"Resource Management (bracket.ts) bracketDisposable should throw error for non-disposable resources","status":"passed","title":"should throw error for non-disposable resources","duration":0.8361000000001013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should manage multiple resources with acquisition order and reverse release order","status":"passed","title":"should manage multiple resources with acquisition order and reverse release order","duration":1.973799999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should release acquired resources even if later acquisitions fail","status":"passed","title":"should release acquired resources even if later acquisitions fail","duration":0.7467000000000326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should handle release errors and continue releasing other resources","status":"passed","title":"should handle release errors and continue releasing other resources","duration":0.8985999999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should throw AggregateError for multiple release failures with no use error","status":"passed","title":"should throw AggregateError for multiple release failures with no use error","duration":1.0830000000000837,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should handle single release failure with no use error","status":"passed","title":"should handle single release failure with no use error","duration":0.8138999999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","bracketMany"],"fullName":"Resource Management (bracket.ts) bracketMany should handle empty resource array","status":"passed","title":"should handle empty resource array","duration":0.48240000000009786,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","DisposableConnection example class"],"fullName":"Resource Management (bracket.ts) DisposableConnection example class should implement AsyncDisposable correctly","status":"passed","title":"should implement AsyncDisposable correctly","duration":9.34209999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","DisposableConnection example class"],"fullName":"Resource Management (bracket.ts) DisposableConnection example class should work with bracketDisposable","status":"passed","title":"should work with bracketDisposable","duration":1.5203000000000202,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","DisposableConnection example class"],"fullName":"Resource Management (bracket.ts) DisposableConnection example class should close connection only once","status":"passed","title":"should close connection only once","duration":0.5900000000000318,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Integration with error scenarios"],"fullName":"Resource Management (bracket.ts) Integration with error scenarios should handle context abort signals during resource operations","status":"passed","title":"should handle context abort signals during resource operations","duration":112.44099999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Integration with error scenarios"],"fullName":"Resource Management (bracket.ts) Integration with error scenarios should handle complex nested resource scenarios","status":"passed","title":"should handle complex nested resource scenarios","duration":0.9533000000000129,"failureMessages":[],"meta":{}}],"startTime":1749745172408,"endTime":1749745172589.9534,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/resource-management.test.ts"},{"assertionResults":[{"ancestorTitles":["Simple Bracket Test"],"fullName":"Simple Bracket Test should work with manual bracket pattern","status":"passed","title":"should work with manual bracket pattern","duration":4.0686999999999784,"failureMessages":[],"meta":{}}],"startTime":1749745173896,"endTime":1749745173900.0686,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/simple-bracket.test.ts"},{"assertionResults":[{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should execute tasks in parallel and return keyed results","status":"passed","title":"should execute tasks in parallel and return keyed results","duration":7.065499999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle empty task object","status":"passed","title":"should handle empty task object","duration":0.8987999999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle single task","status":"passed","title":"should handle single task","duration":1.2041999999999575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should pass the same input to all tasks","status":"passed","title":"should pass the same input to all tasks","duration":1.76989999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle task failures correctly","status":"passed","title":"should handle task failures correctly","duration":3.091200000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should maintain type safety","status":"passed","title":"should maintain type safety","duration":1.2425000000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should respect context overrides","status":"passed","title":"should respect context overrides","duration":0.9769999999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should execute onTrue task when predicate is true","status":"passed","title":"should execute onTrue task when predicate is true","duration":2.1498000000000275,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should execute onFalse task when predicate is false","status":"passed","title":"should execute onFalse task when predicate is false","duration":0.9211999999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should work with async predicates","status":"passed","title":"should work with async predicates","duration":1.0896000000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should pass context to predicate","status":"passed","title":"should pass context to predicate","duration":0.7339999999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should handle errors in predicate","status":"passed","title":"should handle errors in predicate","duration":0.7145999999999617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should handle errors in branch tasks","status":"passed","title":"should handle errors in branch tasks","duration":0.7416000000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should support different return types from branches","status":"passed","title":"should support different return types from branches","duration":0.6265999999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should work with complex conditional logic","status":"passed","title":"should work with complex conditional logic","duration":0.6650000000000205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should execute tasks in parallel and return typed tuple","status":"passed","title":"should execute tasks in parallel and return typed tuple","duration":0.8899999999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle empty array","status":"passed","title":"should handle empty array","duration":0.4700000000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle single task","status":"passed","title":"should handle single task","duration":0.5240000000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should execute tasks in parallel","status":"passed","title":"should execute tasks in parallel","duration":0.6956000000000131,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle task failures","status":"passed","title":"should handle task failures","duration":0.8836000000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should maintain order of results","status":"passed","title":"should maintain order of results","duration":0.6580999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should pass same input to all tasks","status":"passed","title":"should pass same input to all tasks","duration":0.530399999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should combine forkJoin and ift for complex workflows","status":"passed","title":"should combine forkJoin and ift for complex workflows","duration":0.8856999999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should handle nested forkJoin operations","status":"passed","title":"should handle nested forkJoin operations","duration":0.5942000000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should handle complex predicate logic in ift","status":"passed","title":"should handle complex predicate logic in ift","duration":1.2203000000000088,"failureMessages":[],"meta":{}}],"startTime":1749745173044,"endTime":1749745173078.2202,"status":"passed","message":"","name":"C:/Users/Pglenn/effectively/test/structured-concurrency.test.ts"}]}