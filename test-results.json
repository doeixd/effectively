{"numTotalTestSuites":106,"numPassedTestSuites":71,"numFailedTestSuites":35,"numPendingTestSuites":0,"numTotalTests":252,"numPassedTests":222,"numFailedTests":30,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749906454455,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Bracket and Provide Integration"],"fullName":"Bracket and Provide Integration should properly provide resources from bracket to use tasks","status":"passed","title":"should properly provide resources from bracket to use tasks","duration":9.545932999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bracket and Provide Integration"],"fullName":"Bracket and Provide Integration should handle nested bracket provides correctly","status":"passed","title":"should handle nested bracket provides correctly","duration":3.2535380000000487,"failureMessages":[],"meta":{}}],"startTime":1749906455049,"endTime":1749906455062.2534,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/bracket-provide-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","CircuitOpenError"],"fullName":"Circuit Breaker (circuit-breaker.ts) CircuitOpenError should create proper error with circuit ID","status":"passed","title":"should create proper error with circuit ID","duration":9.31999600000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","CircuitOpenError"],"fullName":"Circuit Breaker (circuit-breaker.ts) CircuitOpenError should have proper prototype chain","status":"passed","title":"should have proper prototype chain","duration":1.7160189999999602,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should allow requests to pass through when circuit is closed","status":"passed","title":"should allow requests to pass through when circuit is closed","duration":10.096168999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should record failures but allow requests until threshold is reached","status":"passed","title":"should record failures but allow requests until threshold is reached","duration":8.679836999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","CLOSED state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker CLOSED state behavior should reset failure count on successful request","status":"passed","title":"should reset failure count on successful request","duration":3.7852040000000216,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker OPEN state behavior should trip to OPEN state after reaching failure threshold","status":"failed","title":"should trip to OPEN state after reaching failure threshold","duration":24.363356000000067,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"open-trip-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:171:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker OPEN state behavior should fail fast with CircuitOpenError when circuit is open","status":"failed","title":"should fail fast with CircuitOpenError when circuit is open","duration":6.020990999999981,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"open-fail-fast-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:191:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should transition to HALF-OPEN after timeout and succeed on trial request","status":"failed","title":"should transition to HALF-OPEN after timeout and succeed on trial request","duration":3.2700569999999516,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"half-open-success-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:217:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should return to OPEN state if trial request fails","status":"failed","title":"should return to OPEN state if trial request fails","duration":13.649067999999943,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"half-open-fail-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:262:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","HALF-OPEN state behavior"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker HALF-OPEN state behavior should only transition to HALF-OPEN after the full timeout period","status":"failed","title":"should only transition to HALF-OPEN after the full timeout period","duration":7.251750999999899,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"half-open-full-timeout-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:277:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom failure threshold","status":"passed","title":"should respect custom failure threshold","duration":13.111036000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom open state timeout","status":"failed","title":"should respect custom open state timeout","duration":10.15861700000005,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"config-custom-timeout-circuit0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:327:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should respect custom isFailure predicate","status":"failed","title":"should respect custom isFailure predicate","duration":10.580353999999943,"failureMessages":["AssertionError: expected error to be instance of TemporaryError\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:350:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Configuration options"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Configuration options should not count BacktrackSignal as failure by default","status":"failed","title":"should not count BacktrackSignal as failure by default","duration":9.239019999999982,"failureMessages":["AssertionError: expected [Function] to throw error including 'Real failure after backtrack' but got 'Cannot backtrack forward.'\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///home/patrick/Projects/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:386:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Multiple circuit instances"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Multiple circuit instances should maintain separate state for different circuit IDs","status":"failed","title":"should maintain separate state for different circuit IDs","duration":9.86645400000009,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"multi-instance-id-A1\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:415:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Context integration"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Context integration should work without logger in context if context only has scope","status":"passed","title":"should work without logger in context if context only has scope","duration":13.225306000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Context integration"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Context integration should use context logger when available","status":"passed","title":"should use context logger when available","duration":11.329923000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should handle undefined and null values correctly as input","status":"passed","title":"should handle undefined and null values correctly as input","duration":7.66510100000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should handle rapid successive calls correctly (trial request)","status":"failed","title":"should handle rapid successive calls correctly (trial request)","duration":1010.4294749999999,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Edge cases and error scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Edge cases and error scenarios should maintain state across different run calls if ID is the same","status":"failed","title":"should maintain state across different run calls if ID is the same","duration":5.994617999999946,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"fixed-id-for-shared-state-test-runs-B\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:549:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Circuit Breaker (circuit-breaker.ts)","withCircuitBreaker","Recovery scenarios"],"fullName":"Circuit Breaker (circuit-breaker.ts) withCircuitBreaker Recovery scenarios should handle mixed success/failure patterns correctly","status":"failed","title":"should handle mixed success/failure patterns correctly","duration":6.326234999999997,"failureMessages":["AssertionError: expected error to have message: Circuit Breaker \"recovery-mixed-pattern-circuit-B0\" is open and not accepting requests.\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at /home/patrick/Projects/effectively/test/circuit-breaker.test.ts:579:9\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}}],"startTime":1749906455051,"endTime":1749906456255.3262,"status":"failed","message":"","name":"/home/patrick/Projects/effectively/test/circuit-breaker.test.ts"},{"assertionResults":[{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should pipe a value through a sequence of functions","status":"passed","title":"should pipe a value through a sequence of functions","duration":5.4051110000000335,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should work with a single function","status":"passed","title":"should work with a single function","duration":1.1364500000000817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should return the value unchanged when no functions provided","status":"passed","title":"should return the value unchanged when no functions provided","duration":0.9263710000000174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","pipe"],"fullName":"Composition Utilities (utils.ts) Core composition functions pipe should handle complex transformations","status":"passed","title":"should handle complex transformations","duration":0.7519949999999653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should compose functions from left to right","status":"passed","title":"should compose functions from left to right","duration":4.5728110000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle functions with multiple arguments in first function","status":"passed","title":"should handle functions with multiple arguments in first function","duration":1.6615790000000743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle single function","status":"passed","title":"should handle single function","duration":1.6377430000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Core composition functions","flow"],"fullName":"Composition Utilities (utils.ts) Core composition functions flow should handle no functions","status":"passed","title":"should handle no functions","duration":1.7575110000000222,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should chain tasks together sequentially","status":"passed","title":"should chain tasks together sequentially","duration":8.347540999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should work with plain functions","status":"passed","title":"should work with plain functions","duration":2.792026000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should handle single task workflow","status":"passed","title":"should handle single task workflow","duration":2.0408840000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should pass context through workflow","status":"passed","title":"should pass context through workflow","duration":1.4351619999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","createWorkflow and chain"],"fullName":"Composition Utilities (utils.ts) Workflow creation createWorkflow and chain should chain alias work identically","status":"passed","title":"should chain alias work identically","duration":1.8784830000000738,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromValue"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromValue should start workflow with static value","status":"passed","title":"should start workflow with static value","duration":3.2362589999999045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromValue"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromValue should work with complex objects","status":"passed","title":"should work with complex objects","duration":1.1500249999999141,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromise"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromise should start workflow with promise","status":"passed","title":"should start workflow with promise","duration":5.252059999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromise"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromise should handle rejected promises","status":"passed","title":"should handle rejected promises","duration":12.274312000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromiseFn"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromiseFn should start workflow with context-dependent function","status":"passed","title":"should start workflow with context-dependent function","duration":2.1163289999999506,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Workflow creation","Workflow starters","fromPromiseFn"],"fullName":"Composition Utilities (utils.ts) Workflow creation Workflow starters fromPromiseFn should pass context correctly","status":"passed","title":"should pass context correctly","duration":2.3988160000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should transform values in a workflow","status":"passed","title":"should transform values in a workflow","duration":3.1769950000000335,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should work with async mapping functions","status":"passed","title":"should work with async mapping functions","duration":4.686414000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","map"],"fullName":"Composition Utilities (utils.ts) Pipeable operators map should pass context to mapping function","status":"passed","title":"should pass context to mapping function","duration":1.4729559999999537,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","flatMap"],"fullName":"Composition Utilities (utils.ts) Pipeable operators flatMap should transform values into new tasks","status":"passed","title":"should transform values into new tasks","duration":4.433521000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","flatMap"],"fullName":"Composition Utilities (utils.ts) Pipeable operators flatMap should pass context to flatMap function","status":"passed","title":"should pass context to flatMap function","duration":4.928978999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","pick"],"fullName":"Composition Utilities (utils.ts) Pipeable operators pick should pick specified keys from object","status":"passed","title":"should pick specified keys from object","duration":5.570435999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Pipeable operators","pick"],"fullName":"Composition Utilities (utils.ts) Pipeable operators pick should handle missing keys gracefully","status":"passed","title":"should handle missing keys gracefully","duration":1.4295379999999795,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","mapTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers mapTask should transform task output","status":"passed","title":"should transform task output","duration":4.1141600000000835,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","mapTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers mapTask should work with async mappers","status":"passed","title":"should work with async mappers","duration":30.691958999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Direct composition helpers","andThenTask"],"fullName":"Composition Utilities (utils.ts) Direct composition helpers andThenTask should chain tasks with direct composition","status":"passed","title":"should chain tasks with direct composition","duration":1.6270000000000664,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should execute task when predicate is true","status":"passed","title":"should execute task when predicate is true","duration":3.61755299999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should skip task when predicate is false","status":"passed","title":"should skip task when predicate is false","duration":4.732911000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should work with async predicates","status":"passed","title":"should work with async predicates","duration":4.322406999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","when"],"fullName":"Composition Utilities (utils.ts) Flow control and logic when should pass context to predicate","status":"passed","title":"should pass context to predicate","duration":1.7312749999999824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","unless"],"fullName":"Composition Utilities (utils.ts) Flow control and logic unless should execute task when predicate is false","status":"passed","title":"should execute task when predicate is false","duration":5.512326999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","unless"],"fullName":"Composition Utilities (utils.ts) Flow control and logic unless should skip task when predicate is true","status":"passed","title":"should skip task when predicate is true","duration":3.6415009999999484,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should execute task repeatedly while condition is true","status":"passed","title":"should execute task repeatedly while condition is true","duration":1.0560840000000553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should not execute if condition is initially false","status":"passed","title":"should not execute if condition is initially false","duration":0.767641000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","doWhile"],"fullName":"Composition Utilities (utils.ts) Flow control and logic doWhile should respect abort signals","status":"failed","title":"should respect abort signals","duration":1011.8752520000002,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should perform side effects without changing value","status":"passed","title":"should perform side effects without changing value","duration":2.491749999999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should work with async side effects","status":"passed","title":"should work with async side effects","duration":4.531960000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","tap"],"fullName":"Composition Utilities (utils.ts) Flow control and logic tap should pass context to side effect function","status":"passed","title":"should pass context to side effect function","duration":3.2978039999998146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","sleep"],"fullName":"Composition Utilities (utils.ts) Flow control and logic sleep should pause workflow for specified duration","status":"passed","title":"should pause workflow for specified duration","duration":5.333079999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Flow control and logic","sleep"],"fullName":"Composition Utilities (utils.ts) Flow control and logic sleep should respect abort signals","status":"failed","title":"should respect abort signals","duration":1001.879085,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should perform side effects on error without catching it","status":"passed","title":"should perform side effects on error without catching it","duration":3.440962000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should not perform side effect on success","status":"passed","title":"should not perform side effect on success","duration":0.40890300000000934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","tapError"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience tapError should pass context to error handler","status":"passed","title":"should pass context to error handler","duration":0.5769930000001295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","attempt"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience attempt should convert exceptions to Result type","status":"passed","title":"should convert exceptions to Result type","duration":0.6039270000001125,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","attempt"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience attempt should wrap successful results in Ok","status":"passed","title":"should wrap successful results in Ok","duration":0.4479630000000725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should retry failed tasks","status":"failed","title":"should retry failed tasks","duration":1002.5484610000003,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should fail after max attempts","status":"passed","title":"should fail after max attempts","duration":23.063051000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should use exponential backoff","status":"failed","title":"should use exponential backoff","duration":4.774639999999636,"failureMessages":["Error: promise resolved \"undefined\" instead of rejecting\n    at Assertion.__VITEST_REJECTS__ (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1805:21)\n    at Assertion.propertyGetter (file:///home/patrick/Projects/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1486:27)\n    at Reflect.get (<anonymous>)\n    at Object.proxyGetter [as get] (file:///home/patrick/Projects/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1577:22)\n    at /home/patrick/Projects/effectively/test/composition-utils.test.ts:709:29\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should respect shouldRetry predicate","status":"failed","title":"should respect shouldRetry predicate","duration":1002.1602109999994,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Error handling and resilience","withRetry"],"fullName":"Composition Utilities (utils.ts) Error handling and resilience withRetry should not retry when shouldRetry returns false","status":"passed","title":"should not retry when shouldRetry returns false","duration":3.799678999999742,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withName"],"fullName":"Composition Utilities (utils.ts) Task enhancers withName should attach name to task","status":"passed","title":"should attach name to task","duration":2.8325599999998303,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withName"],"fullName":"Composition Utilities (utils.ts) Task enhancers withName should preserve task functionality","status":"passed","title":"should preserve task functionality","duration":2.1125999999994747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","memoize"],"fullName":"Composition Utilities (utils.ts) Task enhancers memoize should cache results based on input","status":"passed","title":"should cache results based on input","duration":5.146263999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","memoize"],"fullName":"Composition Utilities (utils.ts) Task enhancers memoize should use deep equality for cache keys","status":"passed","title":"should use deep equality for cache keys","duration":3.6053030000002764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","once"],"fullName":"Composition Utilities (utils.ts) Task enhancers once should execute task only once","status":"passed","title":"should execute task only once","duration":3.3162109999993845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","once"],"fullName":"Composition Utilities (utils.ts) Task enhancers once should share the same promise across calls","status":"passed","title":"should share the same promise across calls","duration":3.3092329999999492,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should timeout long-running tasks","status":"passed","title":"should timeout long-running tasks","duration":7.078540999999859,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should complete fast tasks normally","status":"passed","title":"should complete fast tasks normally","duration":1.9562889999997424,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withTimeout"],"fullName":"Composition Utilities (utils.ts) Task enhancers withTimeout should clean up timers on abort","status":"failed","title":"should clean up timers on abort","duration":1001.566468,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withState"],"fullName":"Composition Utilities (utils.ts) Task enhancers withState should manage stateful workflows and provide tools via context","status":"failed","title":"should manage stateful workflows and provide tools via context","duration":7.455551000000014,"failureMessages":["WorkflowError: Task failed: useState() can only be used within a task wrapped by withState(). Ensure withState() is an ancestor enhancer in your workflow.\n    at runImpl (/home/patrick/Projects/effectively/src/run.ts:880:15)\n    at /home/patrick/Projects/effectively/test/composition-utils.test.ts:940:24\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withState"],"fullName":"Composition Utilities (utils.ts) Task enhancers withState should initialize state with a static value","status":"passed","title":"should initialize state with a static value","duration":3.018827999999303,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Task enhancers","withState"],"fullName":"Composition Utilities (utils.ts) Task enhancers withState should throw if useState is used outside a withState context","status":"passed","title":"should throw if useState is used outside a withState context","duration":2.6494979999997668,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withThrottle"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withThrottle should throttle task execution","status":"passed","title":"should throttle task execution","duration":5.853009999999813,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withThrottle"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withThrottle should respect abort signals in throttle queue","status":"failed","title":"should respect abort signals in throttle queue","duration":1003.2982590000001,"failureMessages":["Error: Test timed out in 1000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n    at Timeout.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:44:18)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withPoll"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withPoll should poll until condition is met","status":"passed","title":"should poll until condition is met","duration":4.3837869999997565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withPoll"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withPoll should timeout if condition is never met","status":"failed","title":"should timeout if condition is never met","duration":8.61600400000043,"failureMessages":["AssertionError: expected error to be instance of PollTimeoutError\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should batch multiple calls","status":"passed","title":"should batch multiple calls","duration":5.836573999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should handle batch function errors","status":"passed","title":"should handle batch function errors","duration":9.055843000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","createBatchingTask"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching createBatchingTask should respect abort signals in batch queue","status":"failed","title":"should respect abort signals in batch queue","duration":14.05457000000024,"failureMessages":["AssertionError: expected [Function] to throw error including 'Aborted' but got 'Task failed: This operation was abort…'\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///home/patrick/Projects/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31"],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withDebounce"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withDebounce should debounce rapid calls","status":"passed","title":"should debounce rapid calls","duration":5.836074000000735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Composition Utilities (utils.ts)","Advanced scheduling and batching","withDebounce"],"fullName":"Composition Utilities (utils.ts) Advanced scheduling and batching withDebounce should execute after debounce period","status":"passed","title":"should execute after debounce period","duration":1.1004009999996924,"failureMessages":[],"meta":{}}],"startTime":1749906455076,"endTime":1749906461423.1003,"status":"failed","message":"","name":"/home/patrick/Projects/effectively/test/composition-utils.test.ts"},{"assertionResults":[{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should create a context and run a simple task","status":"passed","title":"should create a context and run a simple task","duration":8.85609599999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should provide context to tasks","status":"passed","title":"should provide context to tasks","duration":1.4288530000001174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should handle context overrides","status":"passed","title":"should handle context overrides","duration":1.1428300000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","createContext and basic execution"],"fullName":"Core Execution Engine (run.ts) createContext and basic execution should handle database operations through context","status":"passed","title":"should handle database operations through context","duration":3.589967999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should throw errors by default","status":"passed","title":"should throw errors by default","duration":6.286249999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should return Result when throw: false","status":"passed","title":"should return Result when throw: false","duration":8.18850099999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Error handling and Result types"],"fullName":"Core Execution Engine (run.ts) Error handling and Result types should handle successful tasks with throw: false","status":"passed","title":"should handle successful tasks with throw: false","duration":1.735102999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should handle BacktrackSignal correctly","status":"failed","title":"should handle BacktrackSignal correctly","duration":28.24564599999985,"failureMessages":["WorkflowError: Cannot backtrack forward.\n    at runImpl (/home/patrick/Projects/effectively/src/run.ts:872:50)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/core-run.test.ts:178:22\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should identify BacktrackSignal with type guard","status":"passed","title":"should identify BacktrackSignal with type guard","duration":2.1797630000000936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Backtracking and control flow"],"fullName":"Core Execution Engine (run.ts) Backtracking and control flow should prevent infinite backtracking loops","status":"failed","title":"should prevent infinite backtracking loops","duration":5.676008000000138,"failureMessages":["AssertionError: expected [Function] to throw error including 'Maximum backtrack limit' but got 'Cannot backtrack forward.'\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1509:21)\n    at Assertion.<anonymous> (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:972:17)\n    at Assertion.methodWrapper (file:///home/patrick/Projects/effectively/node_modules/.pnpm/chai@5.2.0/node_modules/chai/chai.js:1618:25)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/core-run.test.ts:202:7\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should throw ContextNotFoundError when getContext called outside run","status":"passed","title":"should throw ContextNotFoundError when getContext called outside run","duration":0.3933079999999336,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should return error Result when getContextSafe called outside run","status":"passed","title":"should return error Result when getContextSafe called outside run","duration":0.43828800000005685,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should return undefined when getContextOrUndefined called outside run","status":"passed","title":"should return undefined when getContextOrUndefined called outside run","duration":0.45265500000004977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context getters and safety"],"fullName":"Core Execution Engine (run.ts) Context getters and safety should work correctly inside run","status":"passed","title":"should work correctly inside run","duration":0.6403170000000955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should use global context as fallback for smart functions","status":"passed","title":"should use global context as fallback for smart functions","duration":1.4172539999999572,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should throw errors for local-only functions when no context","status":"passed","title":"should throw errors for local-only functions when no context","duration":0.6833260000000791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Smart, Local, and Global context functions"],"fullName":"Core Execution Engine (run.ts) Smart, Local, and Global context functions should work with global-only functions","status":"passed","title":"should work with global-only functions","duration":0.5424689999999828,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should temporarily override context values","status":"failed","title":"should temporarily override context values","duration":0.9503119999999399,"failureMessages":["Error: Context is not available\n    at Object.use (file:///home/patrick/Projects/effectively/node_modules/.pnpm/unctx@2.4.1/node_modules/unctx/dist/index.mjs:31:15)\n    at provide (/home/patrick/Projects/effectively/src/run.ts:2122:57)\n    at /home/patrick/Projects/effectively/test/core-run.test.ts:295:33\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)"],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should nest provide calls correctly","status":"failed","title":"should nest provide calls correctly","duration":3.5159400000000005,"failureMessages":["AssertionError: expected { userId: 'test-user', counter: +0 } to deeply equal { userId: 'level1', counter: 42 }\n    at /home/patrick/Projects/effectively/test/core-run.test.ts:317:22\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/vitest@2.1.8_@types+node@22.10.2_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","provide function and context overrides"],"fullName":"Core Execution Engine (run.ts) provide function and context overrides should preserve scope in provide calls","status":"passed","title":"should preserve scope in provide calls","duration":0.7285309999999754,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should validate context with schema","status":"passed","title":"should validate context with schema","duration":3.400425000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should merge contexts correctly","status":"passed","title":"should merge contexts correctly","duration":1.6009540000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Context validation and merging"],"fullName":"Core Execution Engine (run.ts) Context validation and merging should require context properties","status":"passed","title":"should require context properties","duration":2.6065869999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should create and use injection tokens","status":"failed","title":"should create and use injection tokens","duration":4.390491000000111,"failureMessages":["Error: Context is not available\n    at Object.use (file:///home/patrick/Projects/effectively/node_modules/.pnpm/unctx@2.4.1/node_modules/unctx/dist/index.mjs:31:15)\n    at provide (/home/patrick/Projects/effectively/src/run.ts:2122:57)\n    at /home/patrick/Projects/effectively/test/core-run.test.ts:404:28\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:146:14\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:11\n    at runWithTimeout (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:39:7)\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:17)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)"],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should handle optional injection","status":"passed","title":"should handle optional injection","duration":2.232230999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Dependency injection"],"fullName":"Core Execution Engine (run.ts) Dependency injection should throw when required injection not found","status":"passed","title":"should throw when required injection not found","duration":0.793856999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Cancellation and abort signals"],"fullName":"Core Execution Engine (run.ts) Cancellation and abort signals should propagate abort signals to context scope","status":"passed","title":"should propagate abort signals to context scope","duration":0.8070070000001124,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Cancellation and abort signals"],"fullName":"Core Execution Engine (run.ts) Cancellation and abort signals should handle abort during execution","status":"passed","title":"should handle abort during execution","duration":13.847418000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Logging"],"fullName":"Core Execution Engine (run.ts) Logging should use provided logger","status":"passed","title":"should use provided logger","duration":2.8304259999999886,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Logging"],"fullName":"Core Execution Engine (run.ts) Logging should handle errors with logger","status":"passed","title":"should handle errors with logger","duration":2.7141939999999067,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should handle null/undefined inputs gracefully","status":"passed","title":"should handle null/undefined inputs gracefully","duration":1.104579000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should handle deeply nested task execution","status":"passed","title":"should handle deeply nested task execution","duration":3.679491999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Core Execution Engine (run.ts)","Edge cases and error scenarios"],"fullName":"Core Execution Engine (run.ts) Edge cases and error scenarios should preserve context through complex async operations","status":"passed","title":"should preserve context through complex async operations","duration":11.665686999999934,"failureMessages":[],"meta":{}}],"startTime":1749906455539,"endTime":1749906455677.6658,"status":"failed","message":"","name":"/home/patrick/Projects/effectively/test/core-run.test.ts"},{"assertionResults":[{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should perform parallel map and sequential reduce","status":"passed","title":"should perform parallel map and sequential reduce","duration":44.66421600000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":1.6718869999999697,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle single element arrays","status":"passed","title":"should handle single element arrays","duration":4.851264000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should work with complex data types","status":"passed","title":"should work with complex data types","duration":3.733468000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should work with string concatenation","status":"passed","title":"should work with string concatenation","duration":2.9190949999999702,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle concurrency limits","status":"passed","title":"should handle concurrency limits","duration":41.74922700000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","mapReduce"],"fullName":"Data Processing (data-processing.ts) mapReduce should handle task failures gracefully","status":"passed","title":"should handle task failures gracefully","duration":12.755873000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should filter array based on async predicate","status":"passed","title":"should filter array based on async predicate","duration":11.47268900000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.8293419999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle arrays where no items pass filter","status":"passed","title":"should handle arrays where no items pass filter","duration":6.166653999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle arrays where all items pass filter","status":"passed","title":"should handle arrays where all items pass filter","duration":6.97332300000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should work with complex data types","status":"passed","title":"should work with complex data types","duration":11.520792999999912,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should respect concurrency limits","status":"passed","title":"should respect concurrency limits","duration":49.91476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should handle predicate task failures","status":"passed","title":"should handle predicate task failures","duration":30.29821800000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","filter"],"fullName":"Data Processing (data-processing.ts) filter should maintain original order of elements","status":"passed","title":"should maintain original order of elements","duration":13.507261999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should group items by key generated from async task","status":"passed","title":"should group items by key generated from async task","duration":8.765502000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.6100079999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle arrays with single group","status":"passed","title":"should handle arrays with single group","duration":2.3159859999999526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should work with complex data types","status":"passed","title":"should work with complex data types","duration":6.43582600000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle numeric keys","status":"passed","title":"should handle numeric keys","duration":5.04979000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should respect concurrency limits","status":"passed","title":"should respect concurrency limits","duration":39.18564100000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle keying task failures","status":"passed","title":"should handle keying task failures","duration":2.8383079999999836,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should maintain insertion order within groups","status":"passed","title":"should maintain insertion order within groups","duration":3.1175759999999855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","groupBy"],"fullName":"Data Processing (data-processing.ts) groupBy should handle duplicate keys correctly","status":"passed","title":"should handle duplicate keys correctly","duration":2.0758280000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","Integration tests"],"fullName":"Data Processing (data-processing.ts) Integration tests should combine mapReduce with filter for complex processing","status":"passed","title":"should combine mapReduce with filter for complex processing","duration":4.166275999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["Data Processing (data-processing.ts)","Integration tests"],"fullName":"Data Processing (data-processing.ts) Integration tests should use groupBy with mapReduce for aggregation","status":"passed","title":"should use groupBy with mapReduce for aggregation","duration":14.40054199999986,"failureMessages":[],"meta":{}}],"startTime":1749906455195,"endTime":1749906455533.4006,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/data-processing.test.ts"},{"assertionResults":[{"ancestorTitles":["Debug Provide"],"fullName":"Debug Provide should work with context-specific provide","status":"passed","title":"should work with context-specific provide","duration":7.606506999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Provide"],"fullName":"Debug Provide should work with global provide","status":"passed","title":"should work with global provide","duration":0.8507880000000796,"failureMessages":[],"meta":{}}],"startTime":1749906455043,"endTime":1749906455051.8508,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/debug-provide.test.ts"},{"assertionResults":[{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should execute simple do block with tasks","status":"passed","title":"should execute simple do block with tasks","duration":11.15611899999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle input values","status":"passed","title":"should handle input values","duration":1.974992000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle plain values with pure","status":"passed","title":"should handle plain values with pure","duration":1.3840129999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Promise values","status":"passed","title":"should handle Promise values","duration":1.1828629999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Result types - success case","status":"passed","title":"should handle Result types - success case","duration":1.2487390000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle Result types - error case","status":"passed","title":"should handle Result types - error case","duration":2.869374999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should propagate errors from tasks","status":"passed","title":"should propagate errors from tasks","duration":2.7635099999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","doTask"],"fullName":"Do Notation doTask should handle try/catch in generators","status":"passed","title":"should handle try/catch in generators","duration":0.9109960000000683,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","context-specific doTask"],"fullName":"Do Notation context-specific doTask should work with typed context","status":"passed","title":"should work with typed context","duration":0.9826229999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","context-specific doTask"],"fullName":"Do Notation context-specific doTask should work with doBlock for no-input workflows","status":"passed","title":"should work with doBlock for no-input workflows","duration":1.0502119999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doWhen with true condition","status":"passed","title":"should execute doWhen with true condition","duration":0.8195560000000341,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doWhen with false condition","status":"passed","title":"should execute doWhen with false condition","duration":3.004030000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should execute doUnless with false condition","status":"passed","title":"should execute doUnless with false condition","duration":0.893387999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","conditional functions"],"fullName":"Do Notation conditional functions should skip doUnless with true condition","status":"passed","title":"should skip doUnless with true condition","duration":2.7655580000000555,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","sequence function"],"fullName":"Do Notation sequence function should execute tasks in sequence and collect results","status":"passed","title":"should execute tasks in sequence and collect results","duration":3.3657889999999497,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","sequence function"],"fullName":"Do Notation sequence function should handle empty sequence","status":"passed","title":"should handle empty sequence","duration":2.986524999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","forEach function"],"fullName":"Do Notation forEach function should iterate over items and execute generator for each","status":"passed","title":"should iterate over items and execute generator for each","duration":3.8754490000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","forEach function"],"fullName":"Do Notation forEach function should handle empty array","status":"passed","title":"should handle empty array","duration":2.1721399999998994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Do Notation","integration tests"],"fullName":"Do Notation integration tests should handle complex workflow with multiple patterns","status":"passed","title":"should handle complex workflow with multiple patterns","duration":1.9167670000000498,"failureMessages":[],"meta":{}}],"startTime":1749906455054,"endTime":1749906455105.9167,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/do-notation.test.ts"},{"assertionResults":[{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create a basic custom error type","status":"passed","title":"should create a basic custom error type","duration":2.8095689999998967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create hierarchical error types","status":"passed","title":"should create hierarchical error types","duration":0.9585899999999583,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should create multi-level inheritance hierarchies","status":"passed","title":"should create multi-level inheritance hierarchies","duration":0.7380959999999277,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should handle custom constructor parameters","status":"passed","title":"should handle custom constructor parameters","duration":0.32229400000005626,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should maintain proper stack traces","status":"passed","title":"should maintain proper stack traces","duration":12.85457000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should set constructor name properly","status":"passed","title":"should set constructor name properly","duration":2.1433530000000474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorType"],"fullName":"Error Handling (errors.ts) createErrorType should handle errors with no message","status":"passed","title":"should handle errors with no message","duration":1.778229999999894,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should create a typed error handler tuple","status":"passed","title":"should create a typed error handler tuple","duration":3.1225140000000238,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should provide correct error typing in handler","status":"passed","title":"should provide correct error typing in handler","duration":0.7878289999999879,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","createErrorHandler"],"fullName":"Error Handling (errors.ts) createErrorHandler should work with async handlers","status":"passed","title":"should work with async handlers","duration":10.840202999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should catch and handle specific errors","status":"passed","title":"should catch and handle specific errors","duration":9.522131999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle hierarchical errors correctly","status":"passed","title":"should handle hierarchical errors correctly","duration":2.422875999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should match handlers in order","status":"passed","title":"should match handlers in order","duration":5.602889000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should not catch BacktrackSignal errors","status":"failed","title":"should not catch BacktrackSignal errors","duration":13.160962999999924,"failureMessages":["WorkflowError: Cannot backtrack forward.\n    at runImpl (/home/patrick/Projects/effectively/src/run.ts:872:50)\n    at /home/patrick/Projects/effectively/test/error-handling.test.ts:273:22\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/vitest@2.1.8_@types+node@22.10.2_jsdom@26.1.0/node_modules/vitest/dist/chunks/runBaseTests.3qpJUEJM.js:126:11"],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should rethrow unhandled errors","status":"passed","title":"should rethrow unhandled errors","duration":4.163359000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should pass context to error handlers","status":"passed","title":"should pass context to error handlers","duration":1.2060689999999568,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle async error handlers","status":"passed","title":"should handle async error handlers","duration":16.53233,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should work with successful tasks","status":"passed","title":"should work with successful tasks","duration":3.0963299999999663,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle non-Error thrown values","status":"passed","title":"should handle non-Error thrown values","duration":1.3648170000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","withErrorBoundary"],"fullName":"Error Handling (errors.ts) withErrorBoundary should handle multiple error types in complex workflows","status":"passed","title":"should handle multiple error types in complex workflows","duration":7.45636300000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert successful sync functions to Ok results","status":"passed","title":"should convert successful sync functions to Ok results","duration":0.9392229999999699,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert successful async functions to Ok results","status":"passed","title":"should convert successful async functions to Ok results","duration":15.552144999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert thrown errors to Err results","status":"passed","title":"should convert thrown errors to Err results","duration":5.275605000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should convert async thrown errors to Err results","status":"passed","title":"should convert async thrown errors to Err results","duration":18.37900300000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should handle non-Error thrown values","status":"passed","title":"should handle non-Error thrown values","duration":3.25262500000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should preserve function arguments","status":"passed","title":"should preserve function arguments","duration":6.21211500000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with functions that return undefined","status":"passed","title":"should work with functions that return undefined","duration":4.568828000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with functions that return null","status":"passed","title":"should work with functions that return null","duration":0.46893499999998767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should handle custom error types","status":"passed","title":"should handle custom error types","duration":0.7175730000000158,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","tryCatch"],"fullName":"Error Handling (errors.ts) tryCatch should work with API-like functions","status":"passed","title":"should work with API-like functions","duration":1.8045119999999315,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","Integration with task workflows"],"fullName":"Error Handling (errors.ts) Integration with task workflows should integrate error boundaries with complex workflows","status":"passed","title":"should integrate error boundaries with complex workflows","duration":4.751305000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling (errors.ts)","Integration with task workflows"],"fullName":"Error Handling (errors.ts) Integration with task workflows should combine tryCatch with task workflows","status":"passed","title":"should combine tryCatch with task workflows","duration":1.7780330000000504,"failureMessages":[],"meta":{}}],"startTime":1749906455046,"endTime":1749906455220.778,"status":"failed","message":"","name":"/home/patrick/Projects/effectively/test/error-handling.test.ts"},{"assertionResults":[{"ancestorTitles":["Global Provide Function Fix"],"fullName":"Global Provide Function Fix should properly enhance context when provide is called within existing context","status":"passed","title":"should properly enhance context when provide is called within existing context","duration":7.74708899999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Global Provide Function Fix"],"fullName":"Global Provide Function Fix should work with nested provide calls","status":"passed","title":"should work with nested provide calls","duration":4.792756000000054,"failureMessages":[],"meta":{}}],"startTime":1749906455046,"endTime":1749906455058.7927,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/global-provide-fix.test.ts"},{"assertionResults":[{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should acquire, use, and release resources correctly","status":"passed","title":"should acquire, use, and release resources correctly","duration":7.368306000000075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should release resources even when use task throws","status":"passed","title":"should release resources even when use task throws","duration":6.733225999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should handle errors in acquire phase","status":"passed","title":"should handle errors in acquire phase","duration":3.0823840000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should handle errors in release phase","status":"passed","title":"should handle errors in release phase","duration":3.8079210000000785,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should handle errors in both use and release phases","status":"failed","title":"should handle errors in both use and release phases","duration":16.567444000000023,"failureMessages":["AssertionError: expected error to be instance of AggregateError\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+expect@2.1.8/node_modules/@vitest/expect/dist/index.js:1849:31\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/resource-management.test.ts:146:7\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResource (bracket)"],"fullName":"Resource Management (bracket.ts) withResource (bracket) should work with complex resource merging","status":"passed","title":"should work with complex resource merging","duration":1.5319279999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable and helper functions"],"fullName":"Resource Management (bracket.ts) Disposable and helper functions isDisposable and isAsyncDisposable should work correctly","status":"passed","title":"isDisposable and isAsyncDisposable should work correctly","duration":0.8072989999999436,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable and helper functions"],"fullName":"Resource Management (bracket.ts) Disposable and helper functions asAsyncDisposable should adapt an object with a cleanup method","status":"passed","title":"asAsyncDisposable should adapt an object with a cleanup method","duration":1.119279000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","Disposable and helper functions"],"fullName":"Resource Management (bracket.ts) Disposable and helper functions createResource should create a valid resource definition","status":"passed","title":"createResource should create a valid resource definition","duration":1.2669559999999365,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withDisposableResource"],"fullName":"Resource Management (bracket.ts) withDisposableResource should work with synchronous disposable resources","status":"passed","title":"should work with synchronous disposable resources","duration":4.328254000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withDisposableResource"],"fullName":"Resource Management (bracket.ts) withDisposableResource should work with asynchronous disposable resources","status":"passed","title":"should work with asynchronous disposable resources","duration":9.112091999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withDisposableResource"],"fullName":"Resource Management (bracket.ts) withDisposableResource should dispose resources even when use task fails","status":"passed","title":"should dispose resources even when use task fails","duration":5.003475000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResources (bracketMany)"],"fullName":"Resource Management (bracket.ts) withResources (bracketMany) should manage multiple resources correctly","status":"failed","title":"should manage multiple resources correctly","duration":31.147576000000072,"failureMessages":["WorkflowError: Task failed: Cannot read properties of undefined (reading 'id')\n    at runImpl (/home/patrick/Projects/effectively/src/run.ts:880:15)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /home/patrick/Projects/effectively/test/resource-management.test.ts:292:22\n    at file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:533:5\n    at runTest (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1056:11)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runSuite (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1205:15)\n    at runFiles (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1262:5)\n    at startTests (file:///home/patrick/Projects/effectively/node_modules/.pnpm/@vitest+runner@2.1.8/node_modules/@vitest/runner/dist/index.js:1271:3)"],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","withResources (bracketMany)"],"fullName":"Resource Management (bracket.ts) withResources (bracketMany) should release acquired resources if a later acquisition fails","status":"passed","title":"should release acquired resources if a later acquisition fails","duration":4.270743000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Resource Management (bracket.ts)","DatabaseConnection example class"],"fullName":"Resource Management (bracket.ts) DatabaseConnection example class should be constructable and disposable","status":"passed","title":"should be constructable and disposable","duration":5.387122999999974,"failureMessages":[],"meta":{}}],"startTime":1749906455077,"endTime":1749906455182.3872,"status":"failed","message":"","name":"/home/patrick/Projects/effectively/test/resource-management.test.ts"},{"assertionResults":[{"ancestorTitles":["Simple Bracket Test"],"fullName":"Simple Bracket Test should work with manual bracket pattern","status":"passed","title":"should work with manual bracket pattern","duration":8.776031999999987,"failureMessages":[],"meta":{}}],"startTime":1749906455618,"endTime":1749906455626.7761,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/simple-bracket.test.ts"},{"assertionResults":[{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should execute tasks in parallel and return keyed results","status":"passed","title":"should execute tasks in parallel and return keyed results","duration":7.02556699999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle empty task object","status":"passed","title":"should handle empty task object","duration":0.6362159999999903,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle single task","status":"passed","title":"should handle single task","duration":0.8849700000000666,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should pass the same input to all tasks","status":"passed","title":"should pass the same input to all tasks","duration":2.9995890000000145,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should handle task failures correctly","status":"passed","title":"should handle task failures correctly","duration":4.8845830000000205,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should maintain type safety","status":"passed","title":"should maintain type safety","duration":4.227480000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","forkJoin"],"fullName":"Structured Concurrency (structured-concurrency.ts) forkJoin should respect context overrides","status":"passed","title":"should respect context overrides","duration":2.4255079999999225,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should execute onTrue task when predicate is true","status":"passed","title":"should execute onTrue task when predicate is true","duration":2.6249489999999014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should execute onFalse task when predicate is false","status":"passed","title":"should execute onFalse task when predicate is false","duration":1.0333940000000439,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should work with async predicates","status":"passed","title":"should work with async predicates","duration":4.19554299999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should pass context to predicate","status":"passed","title":"should pass context to predicate","duration":1.1986309999999776,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should handle errors in predicate","status":"passed","title":"should handle errors in predicate","duration":1.4861180000000331,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should handle errors in branch tasks","status":"passed","title":"should handle errors in branch tasks","duration":1.7745180000000573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should support different return types from branches","status":"passed","title":"should support different return types from branches","duration":1.7339759999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","ift (if-then-else)"],"fullName":"Structured Concurrency (structured-concurrency.ts) ift (if-then-else) should work with complex conditional logic","status":"passed","title":"should work with complex conditional logic","duration":1.6043600000000424,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should execute tasks in parallel and return typed tuple","status":"passed","title":"should execute tasks in parallel and return typed tuple","duration":7.789750000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle empty array","status":"passed","title":"should handle empty array","duration":4.769092999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle single task","status":"passed","title":"should handle single task","duration":4.1293210000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should execute tasks in parallel","status":"passed","title":"should execute tasks in parallel","duration":3.7340569999998934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should handle task failures","status":"passed","title":"should handle task failures","duration":1.2194369999999708,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should maintain order of results","status":"passed","title":"should maintain order of results","duration":3.043403000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","allTuple"],"fullName":"Structured Concurrency (structured-concurrency.ts) allTuple should pass same input to all tasks","status":"passed","title":"should pass same input to all tasks","duration":1.7102489999999761,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should combine forkJoin and ift for complex workflows","status":"passed","title":"should combine forkJoin and ift for complex workflows","duration":1.9409200000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should handle nested forkJoin operations","status":"passed","title":"should handle nested forkJoin operations","duration":1.2458729999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Structured Concurrency (structured-concurrency.ts)","Integration tests"],"fullName":"Structured Concurrency (structured-concurrency.ts) Integration tests should handle complex predicate logic in ift","status":"passed","title":"should handle complex predicate logic in ift","duration":1.9010919999999487,"failureMessages":[],"meta":{}}],"startTime":1749906455078,"endTime":1749906455152.9011,"status":"passed","message":"","name":"/home/patrick/Projects/effectively/test/structured-concurrency.test.ts"}]}